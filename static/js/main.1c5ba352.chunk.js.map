{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Mweet.js","components/MweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","firebaseInstance","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Mweet","mweetObj","isOwner","editing","setEditing","text","newMweet","setNewMweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","faTrash","faPencilAlt","MweetFactory","userObj","mweet","setMweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","mweets","setMweets","useEffect","onSnapshot","snapshot","mweetsArray","docs","map","data","marginTop","key","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","getMyMweets","where","orderBy","get","updateProfile","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c5ba352.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const authService = firebase.auth();\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\nconst inputStyles = {};\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(false);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    // form에서 쓰일 애\n    event.preventDefault();\n    let data;\n    try {\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const toggleAccuont = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          name=\"email\"\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          name=\"password\"\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccuont} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import {\n  faGithub,\n  faGoogle,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Mweet = ({ mweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false); // edit모드인지 아닌지\n  const [newMweet, setNewMweet] = useState(mweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this?\");\n    if (ok) {\n      await dbService.doc(`mweets/${mweetObj.id}`).delete();\n      await storageService.refFromURL(mweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`mweets/${mweetObj.id}`).update({\n      text: newMweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewMweet(value);\n  };\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container mweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your mweet\"\n              value={newMweet}\n              required\n              onChange={onChange}\n            />\n            <input type=\"submit\" value=\"Update Mweet\" className=\"formBtn\" />\n          </form>\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </button>\n        </>\n      ) : (\n        <>\n          <h4>{mweetObj.text}</h4>\n          {mweetObj.attachmentUrl && <img src={mweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"mweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Mweet;\n","import { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst MweetFactory = ({ userObj }) => {\n  const [mweet, setMweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (mweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`); // 파일에 대한 reference를 생성\n      const response = await attachmentRef.putString(attachment, \"data_url\"); // 파일, 포맷(data_url 지정되 있음)\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const mweetObj = {\n      text: mweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n\n    await dbService.collection(\"mweets\").add(mweetObj); //collection(collection name)\n    setMweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setMweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event; // 파일 정보\n    const theFile = files[0];\n    // FileReader Api 사용\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      // 파일을 다 읽으면 실행되는 콜백\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile); // readAsDataUrl을 이용해 파일을 읽음(이미지를 특정 text로 바꿈)\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n          value={mweet}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add Photo</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        type=\"file\"\n        id=\"attach-file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{ opacity: 0 }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img src={attachment} style={{ backgroundImage: attachment }} />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default MweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Mweet from \"components/Mweet\";\nimport MweetFactory from \"components/MweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [mweets, setMweets] = useState([]);\n\n  const getMweets = async () => {\n    const dbMweets = await dbService.collection(\"mweets\").get();\n    dbMweets.forEach((document) => {\n      const mweetObject = {\n        ...document.data(),\n        id: document.id,\n      };\n      setMweets((prev) => [mweetObject, ...prev]);\n    });\n  };\n\n  useEffect(() => {\n    //getMweets();\n    dbService.collection(\"mweets\").onSnapshot((snapshot) => {\n      const mweetsArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setMweets(mweetsArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <MweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {mweets.map((mweet) => (\n          <Mweet\n            key={mweet.id}\n            mweetObj={mweet}\n            isOwner={mweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}; // Function Component\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService, storageService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default ({ refreshUser, userObj }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const getMyMweets = async () => {\n    const mweets = await dbService\n      .collection(\"mweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createAt\", \"desc\")\n      .get();\n  };\n  useEffect(() => {\n    getMyMweets();\n  }, []);\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      const response = await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          placeholder=\"Display Name\"\n          onChange={onChange}\n          autoFocus\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{ marginTop: 10 }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginRight: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}'s' Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 500,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n\n/* \n    Fragment(<></>): 부모 요소가 없을 때(div나 span 넣기 애매할때) 많은 요소들은 render하고 싶을 때 사용\n    Switch: 한번에 한 라우터만 볼수 있게 하는 거 \n*/\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  // App이 기본적으로 모든 로직 다루고 있을 거\n  const [init, setInit] = useState(false); // Hook Components: react에서 state받아옴? default false param\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          // 필요한 부분만 가져와서 react state로 설정\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args), //중간단계 인터페이스같은거\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}